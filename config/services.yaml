# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

        # controllers are imported separately to make sure services can be injected
        # as action arguments even if you don't extend any base controller class
    App\Infrastructure\Controller\:
        resource: '../src/Infrastructure/Controller'
        tags: [ 'controller.service_arguments' ]

    App\Application\Command\Handler\:
        resource: '../src/Application/Command/Handler'
        tags: [ 'messenger.message_handler' ]

    App\Application\Query\Handler\:
        resource: '../src/Application/Query/Handler'
        tags: [ 'messenger.message_handler' ]

    App\Infrastructure\:
        resource: '../src/Infrastructure/*'
        exclude: '../src/Infrastructure/{Migrations,UI}'

    App\Infrastructure\Serializer\SerializerFactory:
        arguments:
            - '%kernel.project_dir%/var/cache/serializer'
            - '%kernel.debug%'
            - '%infra_dir%/Serializer/Mapping'

    JMS\Serializer\Serializer:
        factory: 'App\Infrastructure\Serializer\SerializerFactory:create'

    JMS\Serializer\SerializerInterface: '@JMS\Serializer\Serializer'

    App\Shared\EventStore: '@App\Infrastructure\Persistence\MySQLEventStore'

    App\Model\Order\OrderRepository: '@App\Infrastructure\Persistence\OrderRepository'

    App\Model\Order\OrderProjection: '@App\Infrastructure\Projection\OrderProjection'

    App\Model\Order\OrderQueryRepository: '@App\Infrastructure\Persistence\OrderQueryRepository'

    App\Infrastructure\Persistence\ProductViewMapper:
        arguments: [ '%public_dir%', '%images_dir%', '%no_image%' ]

    App\Infrastructure\Service\ImageService:
        arguments: [ '%image_crop_size%', '%public_dir%/%images_dir%' ]

    App\Application\Service\ImageService: '@App\Infrastructure\Service\ImageService'